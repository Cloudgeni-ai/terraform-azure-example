# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*tfplan*
*destroy-plan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Mac specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Ignore editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore log files
*.log

# Ignore temporary files
*.tmp
*.temp

# Ignore backup files
*.backup
*.bak

# Ignore environment-specific files (but keep the template ones)
.env
.env.local
.env.*.local

# Ignore Azure specific files
.azure/

# Ignore other common files
node_modules/
*.pyc
__pycache__/
.pytest_cache/
.coverage
.nyc_output

# Keep documentation and templates
!terraform.tfvars.example
!*.md
!LICENSE
